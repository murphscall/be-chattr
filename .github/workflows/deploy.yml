name: Deploy to AWS

on:
  push:
    branches: [main, master]  # 두 브랜치 모두 지원
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 캐시 설정
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: gradlew 실행 권한 부여
        run: chmod +x gradlew

      - name: 애플리케이션 빌드
        run: ./gradlew build

      - name: Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 간단한 Docker 빌드 방법으로 변경 (캐시 제거)
      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/chattr:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/chattr:latest

      - name: AWS 서버에 배포
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            # 기존 서비스 중지
            docker-compose down || true
            
            # GitHub에서 최신 docker-compose.yml 다운로드
            curl -o docker-compose.yml https://raw.githubusercontent.com/murphscall/be-chattr/master/docker-compose.yml
            
            # 환경변수 설정
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            export SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }}
            export SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }}
            export SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}
            export JWT_SECRET=${{ secrets.JWT_SECRET }}
            export JWT_ACCESS_EXPIRATION=${{ secrets.JWT_ACCESS_EXPIRATION }}
            export KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
            export KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}
            export GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            export GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            export KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}
            export GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }}
            
            # 최신 이미지 다운로드 후 실행
            docker-compose pull
            docker-compose up -d
            
            # 이전 이미지 정리
            docker image prune -f

      - name: 배포 상태 확인
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            echo "=== 컨테이너 상태 ==="
            docker-compose ps
            echo "=== 애플리케이션 로그 (최근 10줄) ==="
            docker-compose logs app --tail 10